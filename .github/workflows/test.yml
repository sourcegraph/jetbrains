name: JetBrains Tests
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  test:
    name: JetBrains tests
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - run: yarn global add pnpm@8.6.7
      - run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
        shell: bash
        id: pnpm-cache
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-${{ matrix.node }}-pnpm-store-
          restore-keys: ${{ runner.os }}-${{ matrix.node }}-pnpm-store-k
      - name: Cache gradle and sourcegraph stores
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.sourcegraph/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
          cache: gradle
      # Skip Code Search build in CI because it's slow, and we don't use it anyway for testing purposes.
      - run: echo "SKIP_CODE_SEARCH_BUILD=true" >> $GITHUB_ENV
      - run: ./gradlew spotlessCheck
      # - run: ./gradlew check
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/
      - run: ./gradlew buildPlugin -x test
      # - run: ./gradlew runPluginVerifier -Pvalidation=lite
      - run: ./gradlew --stop
      - uses: actions/upload-artifact@v4
        with:
          name: plugin.zip
          path: './build/distributions/Sourcegraph-*.zip'
  plugin-verifier:
    name: IntelliJ Plugin Verifier
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: plugin.zip
      - run: |
          pwd
          ls -l
          find . -type f -name 'plugin.zip'
      - name: Verify Plugin on IntelliJ Platforms
        uses: ChrisCarini/intellij-platform-plugin-verifier-action@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          plugin-location: '*.zip'
          ide-versions: |
            ideaIC:2021.1
            ideaIC:2024.1
          failure-levels: |
            COMPATIBILITY_PROBLEMS
